<?php
/**
 * Disbursement
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Assembly API
 *
 * Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@assemblypayments.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Disbursement Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Disbursement implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'disbursement';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'amount' => 'int',
        'currency' => 'string',
        'batch_id' => 'string',
        'cuscal_payment_transaction_id' => 'string',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'state' => 'string',
        'to' => 'string',
        'bank_name' => 'string',
        'bank_account_name' => 'string',
        'bank_account_number' => 'string',
        'bank_routing_number' => 'string',
        'npp_payout_state' => 'string',
        'account_name' => 'string',
        'biller_name' => 'string',
        'biller_code' => 'string',
        'crn' => 'string',
        'links' => '\OpenAPI\Client\Model\DisbursementLinks'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'amount' => null,
        'currency' => null,
        'batch_id' => null,
        'cuscal_payment_transaction_id' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'state' => null,
        'to' => null,
        'bank_name' => null,
        'bank_account_name' => null,
        'bank_account_number' => null,
        'bank_routing_number' => null,
        'npp_payout_state' => null,
        'account_name' => null,
        'biller_name' => null,
        'biller_code' => null,
        'crn' => null,
        'links' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'amount' => 'amount',
        'currency' => 'currency',
        'batch_id' => 'batch_id',
        'cuscal_payment_transaction_id' => 'cuscal_payment_transaction_id',
        'created_at' => 'created_at',
        'updated_at' => 'updated_at',
        'state' => 'state',
        'to' => 'to',
        'bank_name' => 'bank_name',
        'bank_account_name' => 'bank_account_name',
        'bank_account_number' => 'bank_account_number',
        'bank_routing_number' => 'bank_routing_number',
        'npp_payout_state' => 'npp_payout_state',
        'account_name' => 'account_name',
        'biller_name' => 'biller_name',
        'biller_code' => 'biller_code',
        'crn' => 'crn',
        'links' => 'links'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'amount' => 'setAmount',
        'currency' => 'setCurrency',
        'batch_id' => 'setBatchId',
        'cuscal_payment_transaction_id' => 'setCuscalPaymentTransactionId',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'state' => 'setState',
        'to' => 'setTo',
        'bank_name' => 'setBankName',
        'bank_account_name' => 'setBankAccountName',
        'bank_account_number' => 'setBankAccountNumber',
        'bank_routing_number' => 'setBankRoutingNumber',
        'npp_payout_state' => 'setNppPayoutState',
        'account_name' => 'setAccountName',
        'biller_name' => 'setBillerName',
        'biller_code' => 'setBillerCode',
        'crn' => 'setCrn',
        'links' => 'setLinks'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'amount' => 'getAmount',
        'currency' => 'getCurrency',
        'batch_id' => 'getBatchId',
        'cuscal_payment_transaction_id' => 'getCuscalPaymentTransactionId',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'state' => 'getState',
        'to' => 'getTo',
        'bank_name' => 'getBankName',
        'bank_account_name' => 'getBankAccountName',
        'bank_account_number' => 'getBankAccountNumber',
        'bank_routing_number' => 'getBankRoutingNumber',
        'npp_payout_state' => 'getNppPayoutState',
        'account_name' => 'getAccountName',
        'biller_name' => 'getBillerName',
        'biller_code' => 'getBillerCode',
        'crn' => 'getCrn',
        'links' => 'getLinks'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['batch_id'] = $data['batch_id'] ?? null;
        $this->container['cuscal_payment_transaction_id'] = $data['cuscal_payment_transaction_id'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['to'] = $data['to'] ?? null;
        $this->container['bank_name'] = $data['bank_name'] ?? null;
        $this->container['bank_account_name'] = $data['bank_account_name'] ?? null;
        $this->container['bank_account_number'] = $data['bank_account_number'] ?? null;
        $this->container['bank_routing_number'] = $data['bank_routing_number'] ?? null;
        $this->container['npp_payout_state'] = $data['npp_payout_state'] ?? null;
        $this->container['account_name'] = $data['account_name'] ?? null;
        $this->container['biller_name'] = $data['biller_name'] ?? null;
        $this->container['biller_code'] = $data['biller_code'] ?? null;
        $this->container['crn'] = $data['crn'] ?? null;
        $this->container['links'] = $data['links'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return int|null
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param int|null $amount amount
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets batch_id
     *
     * @return string|null
     */
    public function getBatchId()
    {
        return $this->container['batch_id'];
    }

    /**
     * Sets batch_id
     *
     * @param string|null $batch_id batch_id
     *
     * @return self
     */
    public function setBatchId($batch_id)
    {
        $this->container['batch_id'] = $batch_id;

        return $this;
    }

    /**
     * Gets cuscal_payment_transaction_id
     *
     * @return string|null
     */
    public function getCuscalPaymentTransactionId()
    {
        return $this->container['cuscal_payment_transaction_id'];
    }

    /**
     * Sets cuscal_payment_transaction_id
     *
     * @param string|null $cuscal_payment_transaction_id cuscal_payment_transaction_id
     *
     * @return self
     */
    public function setCuscalPaymentTransactionId($cuscal_payment_transaction_id)
    {
        $this->container['cuscal_payment_transaction_id'] = $cuscal_payment_transaction_id;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime|null $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets to
     *
     * @return string|null
     */
    public function getTo()
    {
        return $this->container['to'];
    }

    /**
     * Sets to
     *
     * @param string|null $to to
     *
     * @return self
     */
    public function setTo($to)
    {
        $this->container['to'] = $to;

        return $this;
    }

    /**
     * Gets bank_name
     *
     * @return string|null
     */
    public function getBankName()
    {
        return $this->container['bank_name'];
    }

    /**
     * Sets bank_name
     *
     * @param string|null $bank_name bank_name
     *
     * @return self
     */
    public function setBankName($bank_name)
    {
        $this->container['bank_name'] = $bank_name;

        return $this;
    }

    /**
     * Gets bank_account_name
     *
     * @return string|null
     */
    public function getBankAccountName()
    {
        return $this->container['bank_account_name'];
    }

    /**
     * Sets bank_account_name
     *
     * @param string|null $bank_account_name bank_account_name
     *
     * @return self
     */
    public function setBankAccountName($bank_account_name)
    {
        $this->container['bank_account_name'] = $bank_account_name;

        return $this;
    }

    /**
     * Gets bank_account_number
     *
     * @return string|null
     */
    public function getBankAccountNumber()
    {
        return $this->container['bank_account_number'];
    }

    /**
     * Sets bank_account_number
     *
     * @param string|null $bank_account_number bank_account_number
     *
     * @return self
     */
    public function setBankAccountNumber($bank_account_number)
    {
        $this->container['bank_account_number'] = $bank_account_number;

        return $this;
    }

    /**
     * Gets bank_routing_number
     *
     * @return string|null
     */
    public function getBankRoutingNumber()
    {
        return $this->container['bank_routing_number'];
    }

    /**
     * Sets bank_routing_number
     *
     * @param string|null $bank_routing_number bank_routing_number
     *
     * @return self
     */
    public function setBankRoutingNumber($bank_routing_number)
    {
        $this->container['bank_routing_number'] = $bank_routing_number;

        return $this;
    }

    /**
     * Gets npp_payout_state
     *
     * @return string|null
     */
    public function getNppPayoutState()
    {
        return $this->container['npp_payout_state'];
    }

    /**
     * Sets npp_payout_state
     *
     * @param string|null $npp_payout_state npp_payout_state
     *
     * @return self
     */
    public function setNppPayoutState($npp_payout_state)
    {
        $this->container['npp_payout_state'] = $npp_payout_state;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string|null
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string|null $account_name account_name
     *
     * @return self
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets biller_name
     *
     * @return string|null
     */
    public function getBillerName()
    {
        return $this->container['biller_name'];
    }

    /**
     * Sets biller_name
     *
     * @param string|null $biller_name biller_name
     *
     * @return self
     */
    public function setBillerName($biller_name)
    {
        $this->container['biller_name'] = $biller_name;

        return $this;
    }

    /**
     * Gets biller_code
     *
     * @return string|null
     */
    public function getBillerCode()
    {
        return $this->container['biller_code'];
    }

    /**
     * Sets biller_code
     *
     * @param string|null $biller_code biller_code
     *
     * @return self
     */
    public function setBillerCode($biller_code)
    {
        $this->container['biller_code'] = $biller_code;

        return $this;
    }

    /**
     * Gets crn
     *
     * @return string|null
     */
    public function getCrn()
    {
        return $this->container['crn'];
    }

    /**
     * Sets crn
     *
     * @param string|null $crn crn
     *
     * @return self
     */
    public function setCrn($crn)
    {
        $this->container['crn'] = $crn;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \OpenAPI\Client\Model\DisbursementLinks|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \OpenAPI\Client\Model\DisbursementLinks|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


