<?php
/**
 * MarketplaceMarketplaces
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Assembly API
 *
 * Assembly (formely PromisePay) is a powerful payments engine custom-built for platforms and marketplaces.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@assemblypayments.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * MarketplaceMarketplaces Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class MarketplaceMarketplaces implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'marketplace_marketplaces';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'group_name' => 'string',
        'name' => 'string',
        'short_name' => 'string',
        'color_1' => 'string',
        'color_2' => 'string',
        'color_3' => 'string',
        'color_4' => 'string',
        'color_5' => 'string',
        'website' => 'string',
        'payment_frequency' => 'string',
        'alt_marketplace_id' => 'string',
        'state' => 'string',
        'logo' => 'string',
        'active' => 'string',
        'alt_marketplace_auth' => 'string',
        'business_information' => '\OpenAPI\Client\Model\MarketplaceMarketplacesBusinessInformation',
        'disable_approve_logo' => 'bool',
        'enable_virtual_terminal' => 'bool',
        'currency' => 'string',
        'email' => 'string',
        'seller_white_labeled' => 'bool',
        'partial_refunds' => 'bool',
        'related' => '\OpenAPI\Client\Model\MarketplaceMarketplacesRelated',
        'links' => '\OpenAPI\Client\Model\MarketplaceMarketplacesLinks'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'group_name' => null,
        'name' => null,
        'short_name' => null,
        'color_1' => null,
        'color_2' => null,
        'color_3' => null,
        'color_4' => null,
        'color_5' => null,
        'website' => null,
        'payment_frequency' => null,
        'alt_marketplace_id' => null,
        'state' => null,
        'logo' => null,
        'active' => null,
        'alt_marketplace_auth' => null,
        'business_information' => null,
        'disable_approve_logo' => null,
        'enable_virtual_terminal' => null,
        'currency' => null,
        'email' => null,
        'seller_white_labeled' => null,
        'partial_refunds' => null,
        'related' => null,
        'links' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'group_name' => 'group_name',
        'name' => 'name',
        'short_name' => 'short_name',
        'color_1' => 'color_1',
        'color_2' => 'color_2',
        'color_3' => 'color_3',
        'color_4' => 'color_4',
        'color_5' => 'color_5',
        'website' => 'website',
        'payment_frequency' => 'payment_frequency',
        'alt_marketplace_id' => 'alt_marketplace_id',
        'state' => 'state',
        'logo' => 'logo',
        'active' => 'active',
        'alt_marketplace_auth' => 'alt_marketplace_auth',
        'business_information' => 'business_information',
        'disable_approve_logo' => 'disable_approve_logo',
        'enable_virtual_terminal' => 'enable_virtual_terminal',
        'currency' => 'currency',
        'email' => 'email',
        'seller_white_labeled' => 'seller_white_labeled',
        'partial_refunds' => 'partial_refunds',
        'related' => 'related',
        'links' => 'links'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'group_name' => 'setGroupName',
        'name' => 'setName',
        'short_name' => 'setShortName',
        'color_1' => 'setColor1',
        'color_2' => 'setColor2',
        'color_3' => 'setColor3',
        'color_4' => 'setColor4',
        'color_5' => 'setColor5',
        'website' => 'setWebsite',
        'payment_frequency' => 'setPaymentFrequency',
        'alt_marketplace_id' => 'setAltMarketplaceId',
        'state' => 'setState',
        'logo' => 'setLogo',
        'active' => 'setActive',
        'alt_marketplace_auth' => 'setAltMarketplaceAuth',
        'business_information' => 'setBusinessInformation',
        'disable_approve_logo' => 'setDisableApproveLogo',
        'enable_virtual_terminal' => 'setEnableVirtualTerminal',
        'currency' => 'setCurrency',
        'email' => 'setEmail',
        'seller_white_labeled' => 'setSellerWhiteLabeled',
        'partial_refunds' => 'setPartialRefunds',
        'related' => 'setRelated',
        'links' => 'setLinks'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'group_name' => 'getGroupName',
        'name' => 'getName',
        'short_name' => 'getShortName',
        'color_1' => 'getColor1',
        'color_2' => 'getColor2',
        'color_3' => 'getColor3',
        'color_4' => 'getColor4',
        'color_5' => 'getColor5',
        'website' => 'getWebsite',
        'payment_frequency' => 'getPaymentFrequency',
        'alt_marketplace_id' => 'getAltMarketplaceId',
        'state' => 'getState',
        'logo' => 'getLogo',
        'active' => 'getActive',
        'alt_marketplace_auth' => 'getAltMarketplaceAuth',
        'business_information' => 'getBusinessInformation',
        'disable_approve_logo' => 'getDisableApproveLogo',
        'enable_virtual_terminal' => 'getEnableVirtualTerminal',
        'currency' => 'getCurrency',
        'email' => 'getEmail',
        'seller_white_labeled' => 'getSellerWhiteLabeled',
        'partial_refunds' => 'getPartialRefunds',
        'related' => 'getRelated',
        'links' => 'getLinks'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['group_name'] = $data['group_name'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['short_name'] = $data['short_name'] ?? null;
        $this->container['color_1'] = $data['color_1'] ?? null;
        $this->container['color_2'] = $data['color_2'] ?? null;
        $this->container['color_3'] = $data['color_3'] ?? null;
        $this->container['color_4'] = $data['color_4'] ?? null;
        $this->container['color_5'] = $data['color_5'] ?? null;
        $this->container['website'] = $data['website'] ?? null;
        $this->container['payment_frequency'] = $data['payment_frequency'] ?? null;
        $this->container['alt_marketplace_id'] = $data['alt_marketplace_id'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['logo'] = $data['logo'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['alt_marketplace_auth'] = $data['alt_marketplace_auth'] ?? null;
        $this->container['business_information'] = $data['business_information'] ?? null;
        $this->container['disable_approve_logo'] = $data['disable_approve_logo'] ?? null;
        $this->container['enable_virtual_terminal'] = $data['enable_virtual_terminal'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['seller_white_labeled'] = $data['seller_white_labeled'] ?? null;
        $this->container['partial_refunds'] = $data['partial_refunds'] ?? null;
        $this->container['related'] = $data['related'] ?? null;
        $this->container['links'] = $data['links'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets group_name
     *
     * @return string|null
     */
    public function getGroupName()
    {
        return $this->container['group_name'];
    }

    /**
     * Sets group_name
     *
     * @param string|null $group_name group_name
     *
     * @return self
     */
    public function setGroupName($group_name)
    {
        $this->container['group_name'] = $group_name;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string|null
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string|null $short_name short_name
     *
     * @return self
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets color_1
     *
     * @return string|null
     */
    public function getColor1()
    {
        return $this->container['color_1'];
    }

    /**
     * Sets color_1
     *
     * @param string|null $color_1 color_1
     *
     * @return self
     */
    public function setColor1($color_1)
    {
        $this->container['color_1'] = $color_1;

        return $this;
    }

    /**
     * Gets color_2
     *
     * @return string|null
     */
    public function getColor2()
    {
        return $this->container['color_2'];
    }

    /**
     * Sets color_2
     *
     * @param string|null $color_2 color_2
     *
     * @return self
     */
    public function setColor2($color_2)
    {
        $this->container['color_2'] = $color_2;

        return $this;
    }

    /**
     * Gets color_3
     *
     * @return string|null
     */
    public function getColor3()
    {
        return $this->container['color_3'];
    }

    /**
     * Sets color_3
     *
     * @param string|null $color_3 color_3
     *
     * @return self
     */
    public function setColor3($color_3)
    {
        $this->container['color_3'] = $color_3;

        return $this;
    }

    /**
     * Gets color_4
     *
     * @return string|null
     */
    public function getColor4()
    {
        return $this->container['color_4'];
    }

    /**
     * Sets color_4
     *
     * @param string|null $color_4 color_4
     *
     * @return self
     */
    public function setColor4($color_4)
    {
        $this->container['color_4'] = $color_4;

        return $this;
    }

    /**
     * Gets color_5
     *
     * @return string|null
     */
    public function getColor5()
    {
        return $this->container['color_5'];
    }

    /**
     * Sets color_5
     *
     * @param string|null $color_5 color_5
     *
     * @return self
     */
    public function setColor5($color_5)
    {
        $this->container['color_5'] = $color_5;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string|null
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string|null $website website
     *
     * @return self
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets payment_frequency
     *
     * @return string|null
     */
    public function getPaymentFrequency()
    {
        return $this->container['payment_frequency'];
    }

    /**
     * Sets payment_frequency
     *
     * @param string|null $payment_frequency payment_frequency
     *
     * @return self
     */
    public function setPaymentFrequency($payment_frequency)
    {
        $this->container['payment_frequency'] = $payment_frequency;

        return $this;
    }

    /**
     * Gets alt_marketplace_id
     *
     * @return string|null
     */
    public function getAltMarketplaceId()
    {
        return $this->container['alt_marketplace_id'];
    }

    /**
     * Sets alt_marketplace_id
     *
     * @param string|null $alt_marketplace_id alt_marketplace_id
     *
     * @return self
     */
    public function setAltMarketplaceId($alt_marketplace_id)
    {
        $this->container['alt_marketplace_id'] = $alt_marketplace_id;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return string|null
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param string|null $logo logo
     *
     * @return self
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets active
     *
     * @return string|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param string|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets alt_marketplace_auth
     *
     * @return string|null
     */
    public function getAltMarketplaceAuth()
    {
        return $this->container['alt_marketplace_auth'];
    }

    /**
     * Sets alt_marketplace_auth
     *
     * @param string|null $alt_marketplace_auth alt_marketplace_auth
     *
     * @return self
     */
    public function setAltMarketplaceAuth($alt_marketplace_auth)
    {
        $this->container['alt_marketplace_auth'] = $alt_marketplace_auth;

        return $this;
    }

    /**
     * Gets business_information
     *
     * @return \OpenAPI\Client\Model\MarketplaceMarketplacesBusinessInformation|null
     */
    public function getBusinessInformation()
    {
        return $this->container['business_information'];
    }

    /**
     * Sets business_information
     *
     * @param \OpenAPI\Client\Model\MarketplaceMarketplacesBusinessInformation|null $business_information business_information
     *
     * @return self
     */
    public function setBusinessInformation($business_information)
    {
        $this->container['business_information'] = $business_information;

        return $this;
    }

    /**
     * Gets disable_approve_logo
     *
     * @return bool|null
     */
    public function getDisableApproveLogo()
    {
        return $this->container['disable_approve_logo'];
    }

    /**
     * Sets disable_approve_logo
     *
     * @param bool|null $disable_approve_logo disable_approve_logo
     *
     * @return self
     */
    public function setDisableApproveLogo($disable_approve_logo)
    {
        $this->container['disable_approve_logo'] = $disable_approve_logo;

        return $this;
    }

    /**
     * Gets enable_virtual_terminal
     *
     * @return bool|null
     */
    public function getEnableVirtualTerminal()
    {
        return $this->container['enable_virtual_terminal'];
    }

    /**
     * Sets enable_virtual_terminal
     *
     * @param bool|null $enable_virtual_terminal enable_virtual_terminal
     *
     * @return self
     */
    public function setEnableVirtualTerminal($enable_virtual_terminal)
    {
        $this->container['enable_virtual_terminal'] = $enable_virtual_terminal;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets seller_white_labeled
     *
     * @return bool|null
     */
    public function getSellerWhiteLabeled()
    {
        return $this->container['seller_white_labeled'];
    }

    /**
     * Sets seller_white_labeled
     *
     * @param bool|null $seller_white_labeled seller_white_labeled
     *
     * @return self
     */
    public function setSellerWhiteLabeled($seller_white_labeled)
    {
        $this->container['seller_white_labeled'] = $seller_white_labeled;

        return $this;
    }

    /**
     * Gets partial_refunds
     *
     * @return bool|null
     */
    public function getPartialRefunds()
    {
        return $this->container['partial_refunds'];
    }

    /**
     * Sets partial_refunds
     *
     * @param bool|null $partial_refunds partial_refunds
     *
     * @return self
     */
    public function setPartialRefunds($partial_refunds)
    {
        $this->container['partial_refunds'] = $partial_refunds;

        return $this;
    }

    /**
     * Gets related
     *
     * @return \OpenAPI\Client\Model\MarketplaceMarketplacesRelated|null
     */
    public function getRelated()
    {
        return $this->container['related'];
    }

    /**
     * Sets related
     *
     * @param \OpenAPI\Client\Model\MarketplaceMarketplacesRelated|null $related related
     *
     * @return self
     */
    public function setRelated($related)
    {
        $this->container['related'] = $related;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \OpenAPI\Client\Model\MarketplaceMarketplacesLinks|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \OpenAPI\Client\Model\MarketplaceMarketplacesLinks|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


